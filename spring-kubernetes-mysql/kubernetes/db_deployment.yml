apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
# Define a 'Persistent Voulume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.
---
# Configure 'Deployment' of mysql server
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: mysql
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: mysql
#      tier: database
#  template:
#    metadata:
#      labels:
#        app: mysql
#        tier: database
#    spec:
#      volumes:
#        - name: mysql-persistent-storage
#          persistentVolumeClaim:
#            claimName: mysql-pv-claim
#      containers:
#        - image: mysql:5.7
#          args:
#            - "--ignore-db-dir=lost+found"
#          name: mysql
#          ports:
#            - containerPort: 3306
#              name: mysql
#          volumeMounts:
#            - name: mysql-persistent-storage
#              mountPath: /var/lib/mysql
#              subPath: mysql
#          env:
#            - name: MYSQL_ROOT_PASSWORD
#              value: root
#            - name: MYSQL_DATABASE
#              value: orders
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      containers:
        - image: mysql:5.7 # image from docker-hub
          args:
            - "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: local-DB@123
            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              value: wordpress
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:        # Mounting voulume obtained from Persistent Volume Claim
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
        - name: mysql-persistent-storage # Obtaining 'vloume' from PVC
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql  # DNS name
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:       # mysql Pod Should contain same labels
    app: mysql
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant